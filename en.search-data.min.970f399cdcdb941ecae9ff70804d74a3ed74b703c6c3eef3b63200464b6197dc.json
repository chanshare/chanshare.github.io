[{"id":0,"href":"/docs/room_provisioner/","title":"Room Provisioner","section":"Docs","content":"Room Provisioner #  The room provisioner takes a create room request, tells the content service to gather the media, and tells the room manager to start a room.\nThe request for provisioning a room looks like this\nENDPOINT: /create_room { \u0026#34;user\u0026#34;: \u0026#34;your perfered nickname\u0026#34;, \u0026#34;thread_id\u0026#34;: \u0026#34;1234123\u0026#34;, \u0026#34;board_sn\u0026#34;: \u0026#34;wsg\u0026#34; } On receiving that request the first thing to happen is the playlist is assembled by making a request to the content service. Chances are it will not be fast enough to just download all the media and have the user wait. (Well it might be with a nice spinner :) ) So having the CDN links be generated in a predictable format is pretty essential.\nWhile the playlist is being generated we generate a name for the room. This will be done though mnemonic generation. Probably 3 words to keep it short.\nOnce we have a name and a playlist we can make a request to the Room Manager to start the room\n{ \u0026#34;user\u0026#34;: \u0026#34;the users username\u0026#34;, \u0026#34;playlist\u0026#34;: [ \u0026#34;media item 1\u0026#34;, \u0026#34;media item 2\u0026#34; ], \u0026#34;room_name\u0026#34;: \u0026#34;the-room-name\u0026#34; }   mermaid.initialize({ \"flowchart\": { \"useMaxWidth\":true }, \"theme\": \"default\" } ) sequenceDiagram API Gateway-Room Provisioner: /create_room Room Provisioner-Content Service: generate playlist Content Service-XRoom Provisioner: Recive playlist Content Service-XContent Service: Download media Room Provisioner-Room Provisioner: Generate Name Room Provisioner-Room Manager: Start Room "}]